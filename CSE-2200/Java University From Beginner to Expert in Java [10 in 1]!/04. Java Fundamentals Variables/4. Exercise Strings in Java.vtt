WEBVTT
Kind: captions
Language: en

00:00:11.119 --> 00:00:20.400
Handling Strings in Java. Objective.
Create a program to practice String

00:00:20.400 --> 00:00:25.579
Management in Java. At the end we, should
observe the following.

00:00:28.310 --> 00:00:36.059
Preferably, close any other open
project. Create a new project. Let's

00:00:36.060 --> 00:00:42.040
create a new project. So, click on File -&gt;
New Project. We're going to create a new

00:00:42.180 --> 00:00:49.800
project called BasicStringHandling. We
select Java -&gt; Java Application and click on Next.

00:00:54.800 --> 00:01:02.920
The project name is BasicStringHandling. The project location is C:\Courses\JavaFundamentals\Lesson02

00:01:02.920 --> 00:01:06.100
We deselect Create Main Class because we're going to create

00:01:06.100 --> 00:01:10.940
the main class by ourselves
and click on Finish

00:01:12.940 --> 00:01:16.900
So, the project already has the desired
structure.

00:01:19.300 --> 00:01:21.960
Create a new class. So, right

00:01:21.960 --> 00:01:31.840
click over the project. Click new and
Java class. The class name is: StringHandling

00:01:31.900 --> 00:01:35.200
The package is: strings and
click on Finish

00:01:42.580 --> 00:01:46.660
The class has a desired structure. We can see
some comments that don't affect the

00:01:46.660 --> 00:01:52.600
program a comment can be placed with a
//, /*   */

00:01:52.609 --> 00:01:58.429
/**    */  for Javadoc. We'll study this topic later

00:01:58.429 --> 00:02:07.390
in the course. We'll modify the class
with a following code. Modify the code

00:02:07.390 --> 00:02:14.209
First we have the package called strings
and ends the line with a semicolon we

00:02:14.209 --> 00:02:22.040
write a class name public class StringHandling. Open (curly) brackets and write the

00:02:22.040 --> 00:02:26.780
main method, it's the same method that
we've been using in the last exercises

00:02:26.780 --> 00:02:33.049
so we write public static void main a
string array called args and open a new

00:02:33.049 --> 00:02:40.310
(curly) bracket. We create a variable called
firstName. As we see, we assign a value

00:02:40.310 --> 00:02:46.910
of "John", after that we declare a variable
called lastName with the value of

00:02:46.910 --> 00:02:55.730
"Smith". First we concatenate these values
the value of firstName and lastName

00:02:55.730 --> 00:03:04.340
and we concatenate with any other string
using the add operator and next we can

00:03:04.340 --> 00:03:10.730
use escape characters for example new
line in this case backslash n prints a new

00:03:10.730 --> 00:03:23.030
line. A tab we can use backslash t, a
backward we can use backslash b, a carriage

00:03:23.030 --> 00:03:32.299
return we can use backslash r, simple
quote backslash and a simple quote symbol

00:03:32.299 --> 00:03:40.549
and double quote we can use backslash and
a double quote character. With this we

00:03:40.549 --> 00:03:45.260
finish our main method and close the
class called a StringHandling. Remember

00:03:45.260 --> 00:03:48.709
that you can click on the name of the
file in case of problem when coding

00:03:48.709 --> 00:03:56.219
this class. We execute
our project. Over the name of the class

00:03:56.219 --> 00:04:06.390
StringHadling.java we give right-click and
select Run File, and the result is as

00:04:06.390 --> 00:04:09.940
follows.
The concatenation of the variables firstName

00:04:09.940 --> 00:04:15.420
and lastName. In this case with
values Joan Smith and after that we

00:04:15.420 --> 00:04:20.549
have the examples of the escape
characters for example newline, tab,

00:04:20.549 --> 00:04:27.180
backward, carriage return, simple quote
and double quote. So, this is the result

00:04:27.180 --> 00:04:31.940
of using these escape characters in Java

00:04:34.039 --> 00:04:38.940
Exercise Conclusion. With this exercise
we have put into practice the most basic

00:04:38.940 --> 00:04:43.590
string management in Java. The issue of
string management we will see in more

00:04:43.590 --> 00:04:48.330
detail later well, but we have discussed this
with the aim that we begin to be

00:04:48.330 --> 00:04:54.080
familiar with this type of data that is
one of the most used in Java

