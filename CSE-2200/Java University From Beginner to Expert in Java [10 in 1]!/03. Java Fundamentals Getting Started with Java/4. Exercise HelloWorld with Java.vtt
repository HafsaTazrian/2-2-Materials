WEBVTT
Kind: captions
Language: en

00:00:11.500 --> 00:00:18.760
Java Fundamental Course. Exercise:
HelloWorld with Java and NetBeans

00:00:19.810 --> 00:00:24.769
Exercise Objective: In this first
exercise we're going to create our first

00:00:24.769 --> 00:00:30.579
Java program using NetBeans. At the end
we should see the next result

00:00:30.579 --> 00:00:37.100
methodology of the exercises. Every
exercise has been made a step by step so

00:00:37.100 --> 00:00:40.909
the only thing you have to do is to
follow every step and as you continue

00:00:40.909 --> 00:00:45.470
with the course you'll be more familiar
with our new methodology called a Speed

00:00:45.470 --> 00:00:50.750
Learning, so you can study from the video
or right in the PDF or eBook file

00:00:50.750 --> 00:00:55.910
because you have all the instructions
step-by-step in both: the videos or the

00:00:55.910 --> 00:01:01.219
PDF files (ebooks). We hope you enjoy our
methodology we are sure you will save

00:01:01.219 --> 00:01:05.810
tons of hours of studying once you get
familiarized with our speed learning

00:01:05.810 --> 00:01:15.740
methodology. Let's start with this
exercise. Create a new project. We'll

00:01:15.740 --> 00:01:22.190
create a new project called
HelloWorld project. So, we open NetBeans

00:01:22.190 --> 00:01:26.649
click on file and click on New Project

00:01:28.600 --> 00:01:35.570
We select the Java category and Java
Application. As we see the steps. Step 1:

00:01:35.570 --> 00:01:41.780
We select the Java category. Step 2:
Select the projects Java Application and

00:01:41.780 --> 00:01:50.299
Third: we click on Next. The first time a
java project is created NetBeans

00:01:50.299 --> 00:02:00.049
activates this kind of project so we
wait to finish it to activate it. We

00:02:00.049 --> 00:02:05.539
assign a name and a path for our new
project, as shown below. Project Name

00:02:05.539 --> 00:02:09.380
HelloWorld. Project Location we assign a directory or a

00:02:09.380 --> 00:02:15.829
path in this case is called c:\Courses\JavaFundamentals\Lesson01 As a third

00:02:15.829 --> 00:02:21.370
step, we deselect the Create Main Class.
We'll see later what the main class is

00:02:21.370 --> 00:02:26.989
but in this case we want to create the
main class by ourselves and finally

00:02:26.989 --> 00:02:29.919
click on Finish

00:02:32.170 --> 00:02:37.550
This is the result of creating a new
project in NetBeans. The source package

00:02:37.550 --> 00:02:43.130
folder is where our Java code will live
We don't have any Java class yet but we

00:02:43.130 --> 00:02:47.710
will create a Java class in the next
step

00:02:47.710 --> 00:02:54.200
Create a Java class. We will create a new
Java class. A class is a new file with

00:02:54.200 --> 00:02:58.970
the same name in the source code and in
the name of the file. The file must end

00:02:58.970 --> 00:03:03.860
with the .java extension. So let's create a
new class. Right click on the project

00:03:03.860 --> 00:03:12.500
name, select New and select Java class. We
assign the name: SayHello to our new

00:03:12.500 --> 00:03:19.550
class and click on Finish. So the class
name is SayHello, the package is empty a

00:03:19.550 --> 00:03:24.590
package is like a folder. We'll see this
topic in other lesson. As you can see the

00:03:24.590 --> 00:03:33.230
extension is added automatically and
finally click on Finish. The new class

00:03:33.230 --> 00:03:39.140
must look like shown below. By now a new
class must have the public modifier the

00:03:39.140 --> 00:03:44.780
class keyword and the name of the class
in this case the name is SayHello and

00:03:44.780 --> 00:03:51.110
the code of the class must be inside the
brackets. By now a new class must have

00:03:51.110 --> 00:03:56.270
the public modifier the class keyword
and the name of the class in this case

00:03:56.270 --> 00:04:02.330
SayHello and the code of the class must
be inside the brackets. The extension

00:04:02.330 --> 00:04:06.970
.java is added automatically to the file

00:04:07.630 --> 00:04:13.310
The next step is to modify our Java Code
of the SayHello class. It's important to

00:04:13.310 --> 00:04:18.470
tell you that every exercise has an eBook associated and you can download it

00:04:18.470 --> 00:04:23.090
and check the source code of every file
this is part of our Speed Learning

00:04:23.090 --> 00:04:27.890
methodology. You can always check the
complete source code of every file in

00:04:27.890 --> 00:04:32.990
every exercise. If you have problems
coding any exercise, you can click on

00:04:32.990 --> 00:04:37.100
the name of the file or class that is
given to you or you can download the

00:04:37.100 --> 00:04:43.370
complete project that is 100% functional
Let's see how the SayHello class is

00:04:43.370 --> 00:04:48.119
implemented
This is the code for the SayHello.java

00:04:48.119 --> 00:04:56.129
class. First we write public. This is
an access modifier, after that we write

00:04:56.129 --> 00:05:02.189
class, indicating that this is a java
class and finally the name of the class

00:05:02.189 --> 00:05:11.039
in this case SayHello. We open a bracket
and we can write in this case a main

00:05:11.039 --> 00:05:16.259
method. We'll talk about this main method
later, but the main method is needed to

00:05:16.259 --> 00:05:23.399
execute or Java class. After that, we
write to the console "Say Hello". You can

00:05:23.399 --> 00:05:28.549
send any text to the console. In this
case we are sending the string "Say Hello"

00:05:28.549 --> 00:05:34.499
We close the main method and close the
class SayHello. Let's explain the main

00:05:34.499 --> 00:05:38.699
method. As we can see, after the
definition of the class, we have created

00:05:38.699 --> 00:05:43.769
a main method. This method is necessary
to execute the class SayHello. To define

00:05:43.769 --> 00:05:50.279
a main method that is executable, we
need to write the code below. public is a

00:05:50.279 --> 00:05:55.349
modifier, we'll see the access modifier
later in the course. A static is a

00:05:55.349 --> 00:06:00.899
modifier, we'll see the static modifier
later in the course. void this means the

00:06:00.899 --> 00:06:05.879
method returns nothing, we'll see this
reserved word later in the course. main

00:06:05.879 --> 00:06:10.319
this is the name of the method and must
be in lowercase letter, and the

00:06:10.319 --> 00:06:16.019
parameters. In this case the parameter is
called "args" and is an array of strings

00:06:16.019 --> 00:06:21.029
This is the parameter of the method and
it's an array of a string types. We'll

00:06:21.029 --> 00:06:26.129
see String types and Arrays later in the
course, and the body of the main method

00:06:26.129 --> 00:06:32.819
any line inside the (curly) brackets of the main
method is the body of the method. Inside

00:06:32.819 --> 00:06:38.549
the body of the method there is a System.out.println method. Inside the

00:06:38.549 --> 00:06:44.459
body of the main method there is a
System.out.println method. The

00:06:44.459 --> 00:06:49.589
println method prints to the console the
text or string that we pass as a

00:06:49.589 --> 00:06:54.629
parameter to this method. The important
part of this exercise is to execute our

00:06:54.629 --> 00:06:58.680
first Java program. So, it's not important
to understand everything

00:06:58.680 --> 00:07:02.820
at this moment, what is important to
understand is the process of creating

00:07:02.820 --> 00:07:11.389
and executing a project in Java. Executed
project. Finally we execute our project

00:07:11.389 --> 00:07:20.340
Right-click on the SayHello class and
select "Run File". This is the result of

00:07:20.340 --> 00:07:27.060
executing our code. As we can see the
output says "Say Hello". Is the same text

00:07:27.060 --> 00:07:35.160
is the same string that we pass as an
argument to the function println. With

00:07:35.160 --> 00:07:39.330
this exercise we have created our first
Java program with the help of the

00:07:39.330 --> 00:07:45.180
NetBeans IDE. An IDE (integrated
Development Environment) is a tool that

00:07:45.180 --> 00:07:50.340
will help us to a speed our creation of
software with Java, however we should not

00:07:50.340 --> 00:07:56.580
depend 100% on this type of tools, since
in a job many times we will not be able

00:07:56.580 --> 00:08:01.889
to select the IDE and therefore we can
stay without any knowledge when changing

00:08:01.889 --> 00:08:10.400
the IDE. For this reason we will learn the
concepts, which can be applied in any IDE

00:08:10.400 --> 00:08:16.530
regardless of which one we use or that
of our preference. For this, we will

00:08:16.530 --> 00:08:22.500
provide all the fully functional code in
any IDE and so, you can use any IDE of

00:08:22.500 --> 00:08:29.130
your choice. Finally, we know many of the
concepts are new to many programmers but

00:08:29.130 --> 00:08:33.360
believe us, we've structured the course
in a way that every lesson has a

00:08:33.360 --> 00:08:38.459
specific topic and nothing more than
that, in order to retain the concept or

00:08:38.459 --> 00:08:43.260
be able to review a concept during the
course. So please be patient when studing

00:08:43.260 --> 00:08:48.300
this course, and if you plan to be a good
programmer this is a necessary skill so

00:08:48.300 --> 00:08:53.310
again please be PATIENT. You'll be an
excellent Java programmer at the end of

00:08:53.310 --> 00:08:55.940
this course.

