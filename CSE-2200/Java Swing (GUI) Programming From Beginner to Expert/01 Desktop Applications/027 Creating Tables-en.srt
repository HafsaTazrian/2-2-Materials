1
00:00:01,940 --> 00:00:05,820
Hello this is John from
caveartprogramming.com and in

2
00:00:05,820 --> 00:00:08,865
this tutorial we're gonna look at tables
in Java.

3
00:00:08,865 --> 00:00:16,405
So what I'm gonna do, is I'm gonna replace
this text area here with a J table.

4
00:00:16,405 --> 00:00:22,762
So to start off with, I'm gonna create a
panel to hold the table.

5
00:00:22,762 --> 00:00:28,480
So let's create a new class and I'll call
it Table Panel,

6
00:00:29,510 --> 00:00:36,220
and I'll make it an extend JPanel, and,

7
00:00:36,220 --> 00:00:41,690
at the import, [UNKNOWN] skip that
constructor, so public table on our

8
00:00:44,560 --> 00:00:51,310
and now I'm gonna give this a private
instance of JTable, so JTable table.

9
00:00:52,380 --> 00:00:59,780
And in the constructor, I can say table
equals new JTable at the import.

10
00:01:01,090 --> 00:01:03,860
And lets set the border, the, the layout
to

11
00:01:03,860 --> 00:01:08,810
Border Layout and so set out new border
layouts.

12
00:01:08,810 --> 00:01:14,030
I just wanna add the table in the middle
here and [INAUDIBLE] will do the trick.

13
00:01:14,030 --> 00:01:15,655
So I can say

14
00:01:15,655 --> 00:01:24,510
addtableandborderlayout.center, there we
go.

15
00:01:24,510 --> 00:01:28,670
And now, back in my main frame, I can add
that, into

16
00:01:28,670 --> 00:01:33,960
the main frame, I can say here, Private
Table Panel, Table Panel.

17
00:01:35,100 --> 00:01:41,770
So I've added an instance for able to the
main frame of my new class and down here,

18
00:01:41,770 --> 00:01:49,390
where I create the different panels, I can
say Table Panel equals New Table Panel.

19
00:01:50,830 --> 00:01:54,410
And of course, down here I need to add it
to the main frame.

20
00:01:55,570 --> 00:01:57,170
And for the moment I'm just gonna replace

21
00:01:57,170 --> 00:02:00,890
text panel and [UNKNOWN] will bring text
panel

22
00:02:00,890 --> 00:02:04,570
back and I wanna show you how to use tabs,
but for the moment that will do.

23
00:02:04,570 --> 00:02:07,030
So if I just run that, it doesn't look
like anything at the moment.

24
00:02:07,030 --> 00:02:10,360
And that's 'cuz we've gotta get the data
into it somehow.

25
00:02:10,360 --> 00:02:12,030
And there are various ways of doing that.

26
00:02:12,030 --> 00:02:15,310
You could use a default table model.

27
00:02:15,310 --> 00:02:18,390
But, I'm gonna do it a slightly different
way.

28
00:02:20,020 --> 00:02:25,050
In my Table Panel, well, actually, first
things first.

29
00:02:25,050 --> 00:02:29,410
I'm gonna actually create a new class in
this GUI package here.

30
00:02:29,410 --> 00:02:33,150
New Class and I'm gonna make this New
Class and

31
00:02:33,150 --> 00:02:37,200
we're gonna call it table, let's call it
Table Model.

32
00:02:37,200 --> 00:02:40,360
Maybe I should call it Person Table Model.

33
00:02:41,860 --> 00:02:48,074
And I'm gonna make it extend, Abstract
Table Model.

34
00:02:48,074 --> 00:02:54,750
Abstract Table Model and I'll click
Finished at the imports there.

35
00:02:54,750 --> 00:02:56,976
And if I click on this error message here,
it's

36
00:02:56,976 --> 00:02:59,540
gonna say I've got to implement a bunch of
methods.

37
00:02:59,540 --> 00:03:01,100
So let's implement those.

38
00:03:02,740 --> 00:03:05,750
And now the rest of the tutorial is
basically

39
00:03:05,750 --> 00:03:09,890
largely gonna consist of implementing
these methods, so I've got

40
00:03:09,890 --> 00:03:11,700
one for getting the column count, getting
the row

41
00:03:11,700 --> 00:03:15,910
count, and getting the value a particular
row and column.

42
00:03:15,910 --> 00:03:18,998
And so this is actually not too complex,
really.

43
00:03:18,998 --> 00:03:25,422
And, but [INAUDIBLE] in table panel here,
what I'm gonna have to do, is

44
00:03:25,422 --> 00:03:31,880
I'm gonna somehow gonna have to create one
of these person table models for starts.

45
00:03:31,880 --> 00:03:32,490
So let's do that.

46
00:03:32,490 --> 00:03:38,130
Let's say private person table model,
table model.

47
00:03:40,150 --> 00:03:45,130
And down here I can say table model equals
new person

48
00:03:45,130 --> 00:03:50,040
table model, and then I can pass that to
the

49
00:03:50,040 --> 00:03:56,182
constructor of the JTable, passing the
table model there.

50
00:03:56,182 --> 00:03:58,809
And now, so, if I run that it still

51
00:03:58,809 --> 00:04:03,201
made them crash but it's still not gonna
do anything.

52
00:04:03,201 --> 00:04:05,826
So now I need to get my data into

53
00:04:05,826 --> 00:04:10,790
the Abstract Table model, 'cuz this
abstract, this Person Table

54
00:04:10,790 --> 00:04:13,810
Model is really just a wrap up for my data

55
00:04:13,810 --> 00:04:16,489
that presents it in the right way for my
table.

56
00:04:18,220 --> 00:04:19,780
So first of all I, if I take a look

57
00:04:19,780 --> 00:04:23,900
at my controller here, so I've got, so
there's my model.

58
00:04:23,900 --> 00:04:26,770
I've also got this controller package with
a controller class in it.

59
00:04:28,170 --> 00:04:33,550
And I could, I'm gonna in this tutorial,
this series of tutorials, let's just

60
00:04:33,550 --> 00:04:39,700
say it's not intended to be a set
tutorials on Software Architecture.

61
00:04:39,700 --> 00:04:44,980
But, I'm gonna have the policy that my GUI
stop

62
00:04:44,980 --> 00:04:49,200
is gonna communicate with the data model
only through this controller.

63
00:04:49,200 --> 00:04:53,020
So, I'm gonna give this controller a
public

64
00:04:53,020 --> 00:04:57,520
method that returns a list of person
objects.

65
00:04:57,520 --> 00:04:59,700
And I'm gonna call that getpeople.

66
00:04:59,700 --> 00:05:06,980
And that's just gonna wrap my
db.getpeople.

67
00:05:06,980 --> 00:05:10,870
And so if I say that, I then input the job
utility list.

68
00:05:12,260 --> 00:05:16,170
And, and now, I need to get this somehow,
let's just have a look at this.

69
00:05:16,170 --> 00:05:16,800
Yeah.

70
00:05:16,800 --> 00:05:18,050
I've gotta actually have a return.

71
00:05:20,650 --> 00:05:26,330
Now I need to somehow pass this list of
people here, to my table model.

72
00:05:26,330 --> 00:05:28,550
So to do that I'm gonna have to get it

73
00:05:28,550 --> 00:05:33,030
into this, table panel, which is where the
table model is.

74
00:05:34,450 --> 00:05:37,450
So I've got a table panel, with a table in
it, and a table

75
00:05:37,450 --> 00:05:43,040
model and the table model's created a main
frame, and I wanna route my

76
00:05:43,040 --> 00:05:47,600
kind of data and my communications through
main frame here, so that our main

77
00:05:47,600 --> 00:05:53,154
frame is acting a little bit like sort of
local controller for my GUI.

78
00:05:53,154 --> 00:05:56,520
and, and to do that, I'm gonna give this
table panel a method.

79
00:05:56,520 --> 00:06:01,290
I'm gonna give it a method called setData
which

80
00:06:01,290 --> 00:06:07,170
accepts a list of person objects.

81
00:06:07,170 --> 00:06:12,140
So let's call that let's call that DB cuz
it's basically the database

82
00:06:13,530 --> 00:06:20,300
and I give it a private variable here,
let's say private

83
00:06:22,590 --> 00:06:26,480
in fact I probably don't really need a
private variable at all

84
00:06:26,480 --> 00:06:30,390
because what I can do is I can say on my
table model.

85
00:06:30,390 --> 00:06:34,270
If I go the person table model, I can give
this the constructor.

86
00:06:34,270 --> 00:06:40,910
So I can say public person table model,
and I can make the constructor

87
00:06:40,910 --> 00:06:48,220
accept a list of person objects, so-called
DB.

88
00:06:48,220 --> 00:06:52,910
And I can create a local a private

89
00:06:52,910 --> 00:06:56,700
variable here, an instanced variable of
the same type.

90
00:06:56,700 --> 00:07:03,990
And I can send a constructor this.bdb
equals db.

91
00:07:03,990 --> 00:07:08,490
So all I'm doing here is I'm passing a
reference to the data into

92
00:07:08,490 --> 00:07:13,700
the table model, which is acting as a sort
of wrapper for the data.

93
00:07:13,700 --> 00:07:18,810
And now in my table panel, if I can pass
in a list of person

94
00:07:20,290 --> 00:07:25,450
objects to my table panel, then I can say,
table model.

95
00:07:26,640 --> 00:07:31,980
In fact I'm creating my table model here.

96
00:07:31,980 --> 00:07:36,030
So, let's, actually let's change this
slightly.

97
00:07:38,530 --> 00:07:40,670
Let's let's not have a constructor.

98
00:07:40,670 --> 00:07:41,120
Let's say.

99
00:07:41,120 --> 00:07:46,581
Let's give it a public set data method.

100
00:07:46,581 --> 00:07:53,260
And that's gonna just look like this, so
let's add this in here.

101
00:07:53,260 --> 00:07:55,550
So I, let's, let's see that I construct it

102
00:07:55,550 --> 00:07:58,420
without actually passing in any data, if
that makes sense.

103
00:08:00,390 --> 00:08:05,612
So I'll have this set data method and now,
if I've got this right, which

104
00:08:05,612 --> 00:08:10,430
I think I have, in table panel I can say
tablemodel.setdata.

105
00:08:10,430 --> 00:08:14,010
I pass in the list of people.

106
00:08:14,010 --> 00:08:19,366
So there's a lot of passing around of data
here, and

107
00:08:19,366 --> 00:08:24,625
then in a minute, I'm just gonna recap on
what we've done.

108
00:08:24,625 --> 00:08:28,232
But first, let's just make this work.

109
00:08:28,232 --> 00:08:33,137
So now another missing piece is, I need to
go into

110
00:08:33,137 --> 00:08:38,369
the mainframe here and at some point, I'm

111
00:08:38,369 --> 00:08:43,500
gonna have to get the data and pass it to
the table panel.

112
00:08:43,500 --> 00:08:47,414
So the, the table panel now has a set data
method.

113
00:08:47,414 --> 00:08:55,055
So, let's say after I've created a
controller, I call TablePanel.set

114
00:08:55,055 --> 00:09:00,540
set what do I call that, setdata,
tablePanel setData.

115
00:09:01,710 --> 00:09:07,609
And I can pass in controller.getpeople
like this.

116
00:09:07,609 --> 00:09:10,062
[BLANK_AUDIO]

117
00:09:10,062 --> 00:09:11,890
And so let's follow the sooner.

118
00:09:11,890 --> 00:09:16,905
So I've got a data model already, and my
data model is this

119
00:09:16,905 --> 00:09:22,299
states base class which contains [UNKNOWN]
of people and if I add a

120
00:09:22,299 --> 00:09:28,641
person, we've seen in previous tutorials
that by clicking okay on my

121
00:09:28,641 --> 00:09:34,920
form, it's gonna call the out person
method at this database to, to do that.

122
00:09:34,920 --> 00:09:38,211
And so in the main frame, if I click okay
on that

123
00:09:38,211 --> 00:09:42,729
form, it's gonna get this form event, and
it's gonna add a person,

124
00:09:42,729 --> 00:09:48,017
fire the controller and the controller's
got this Add Person method, which

125
00:09:48,017 --> 00:09:53,360
turns the person event object into the
right form for the data model.

126
00:09:53,360 --> 00:09:55,310
And adds it to the data model.

127
00:09:57,120 --> 00:10:03,330
Now also, in the mainframe, I can use

128
00:10:03,330 --> 00:10:10,160
the controller getpeople method, to, to
get my list of people.

129
00:10:10,160 --> 00:10:16,320
And I can then add it to the table panel,

130
00:10:16,320 --> 00:10:21,180
and set table panel to set data controller
[UNKNOWN] people in the table panel.

131
00:10:21,180 --> 00:10:26,750
And then get the [INAUDIBLE] to people,
which I set in the table model, and in the

132
00:10:26,750 --> 00:10:33,440
table model that just happily receives
that list of person objects.

133
00:10:33,440 --> 00:10:37,097
So it seems complex, and of course if
you're, if you're

134
00:10:37,097 --> 00:10:42,740
really implementing a real application, it
could get more complex than this.

135
00:10:42,740 --> 00:10:46,850
And the, the point of this tutorial rather
is I just wanna show you table working.

136
00:10:47,860 --> 00:10:50,560
And the bottom line is here.

137
00:10:50,560 --> 00:10:56,040
You've gotta have, for your table, you've
gotta have a table model and that table

138
00:10:56,040 --> 00:11:01,750
model is gonna have to be able to return
the the

139
00:11:01,750 --> 00:11:06,880
number of columns, the number of rows and
the the values in each cell.

140
00:11:08,080 --> 00:11:09,850
So, now I can actually do that.

141
00:11:09,850 --> 00:11:14,980
Cuz now I've got actually a reference here
to the list of people.

142
00:11:14,980 --> 00:11:18,120
I can then get con account.

143
00:11:18,120 --> 00:11:20,090
Well, actually we'll talk about that in a

144
00:11:20,090 --> 00:11:22,430
second but, and get row column that's
pretty easy.

145
00:11:22,430 --> 00:11:27,700
'Cuz I can say return DB.size, cuz the,
the DB

146
00:11:27,700 --> 00:11:31,103
here is just a list which has a size
method.

147
00:11:31,103 --> 00:11:35,970
And the size is the number of person
objects in that

148
00:11:35,970 --> 00:11:38,710
list and that's gonna be the number of
rows in my table.

149
00:11:40,090 --> 00:11:48,070
Now to get get the value, at a particular,
this is actually a particular

150
00:11:48,070 --> 00:11:54,310
row and column, the way that I need to do
that is so I get this,

151
00:11:54,310 --> 00:11:59,380
this get value out will receive the, the
row and the column and have to

152
00:11:59,380 --> 00:12:04,560
return the data that's supposed to be in
that row, and the column, and that column.

153
00:12:04,560 --> 00:12:07,318
So to do that, I can just do a switch on,

154
00:12:07,318 --> 00:12:12,770
well let's first of all get the person,
relevant person object.

155
00:12:12,770 --> 00:12:18,530
And that's gonna be very simple, it's just
db.getrow, and I see the row number there.

156
00:12:20,700 --> 00:12:24,490
sorry, not get row, but db.get.

157
00:12:24,490 --> 00:12:31,230
Actually, and then, I can do a switch on
the column, and I can return

158
00:12:31,230 --> 00:12:36,440
a field from the Person object, and, as
appropriate, depending upon the column.

159
00:12:37,660 --> 00:12:46,070
So I can say, case, let's say case zero,
let's return person.get id.

160
00:12:47,600 --> 00:12:49,250
And case one,

161
00:12:51,920 --> 00:12:58,709
I'll return person.getname, and case two,
let's

162
00:12:58,709 --> 00:13:04,800
return person.get occupation case three.

163
00:13:04,800 --> 00:13:07,824
I can return person.

164
00:13:07,824 --> 00:13:17,620
getage category, case four
returnperson.get.

165
00:13:17,620 --> 00:13:25,662
Employment category, case five return
person.isUScitizen,

166
00:13:25,662 --> 00:13:31,079
and case six, let's return person.tax.

167
00:13:33,810 --> 00:13:37,512
GetTaxID, I'm, I think I saw [UNKNOWN]
that's

168
00:13:37,512 --> 00:13:41,130
seven different cases here, from zero to
six.

169
00:13:41,130 --> 00:13:44,560
So, we've got the seven columns, so for
the column count, let's return seven here.

170
00:13:47,220 --> 00:13:52,080
And now, you know, after, you return null
down here if not if

171
00:13:52,080 --> 00:13:55,350
those all matched, and I've got they
should be, if I got everything right.

172
00:13:55,350 --> 00:13:59,350
So I've, I've said there're, if I say
there are seven columns,

173
00:13:59,350 --> 00:14:05,150
then call here should never be more than
six, cuz it's starting zero.

174
00:14:05,150 --> 00:14:06,700
So the last value should be six.

175
00:14:08,362 --> 00:14:11,110
So this, this should never happen, this
return null.

176
00:14:12,190 --> 00:14:14,634
Okay, so let's, let's run that, and at

177
00:14:14,634 --> 00:14:17,937
the moment, I'm not actually gonna,
nothing's gonna appear

178
00:14:17,937 --> 00:14:19,647
to happen, 'cuz if I click, if I

179
00:14:19,647 --> 00:14:24,360
type [INAUDIBLE] information there and
click OK, nothing happens.

180
00:14:24,360 --> 00:14:29,650
And if that, yeah, I've got a I'm not sure
if that's a big deal or not.

181
00:14:29,650 --> 00:14:31,250
Let's just clear that.

182
00:14:33,290 --> 00:14:37,960
But in my main frame, what I need to do.

183
00:14:37,960 --> 00:14:46,330
So in the main frame I've I've got this
thing that responds to form clicked.

184
00:14:46,330 --> 00:14:48,230
So when a form event occurs, it

185
00:14:48,230 --> 00:14:52,020
says controller.addperson, and what I need
to do,

186
00:14:52,020 --> 00:14:56,280
is I need to tell my table to refresh
every time something's added to the data.

187
00:14:56,280 --> 00:14:58,874
So it then knows to recheck the data.

188
00:14:58,874 --> 00:15:05,490
So I'm gonna add a, a method to table
panel, which I'm gonna call Refresh.

189
00:15:05,490 --> 00:15:07,122
And it's not there yet, so I'm typing

190
00:15:07,122 --> 00:15:11,670
tablePanel.refresh, and I've got to
implement that now.

191
00:15:11,670 --> 00:15:18,530
So I'll say public void refresh, and what
this is gonna do, is it's just gonna

192
00:15:18,530 --> 00:15:26,110
go to the table model and call one of
these fire methods,

193
00:15:26,110 --> 00:15:28,950
which you've got different like fire
methods

194
00:15:28,950 --> 00:15:32,190
for firing different events to tell the

195
00:15:32,190 --> 00:15:34,700
table that's looking at the model, that

196
00:15:34,700 --> 00:15:38,270
different aspects of the model have
changed, and

197
00:15:38,270 --> 00:15:44,900
the one I'm gonna use here, is I'm just
gonna say file data table changed.

198
00:15:46,140 --> 00:15:53,470
So let's run this now, and if I add my
name in here and click OK, we've

199
00:15:53,470 --> 00:15:58,978
got a row added and the row is not exactly
beautiful, but it'll do for just a minute.

200
00:15:58,978 --> 00:16:03,620
Occupation software [UNKNOWN] like that
again.

201
00:16:03,620 --> 00:16:07,115
So, it's it's gonna keep adding the same,
basically the

202
00:16:07,115 --> 00:16:11,150
same value, different i.d.'s here, and I
won't worry about that.

203
00:16:11,150 --> 00:16:14,553
Now one last thing, for this tutorial,
isn't

204
00:16:14,553 --> 00:16:17,872
gonna add a column header to this table
and

205
00:16:17,872 --> 00:16:24,023
the way to do that is in my table panel,
usually tables should be in a scroll pane.

206
00:16:24,023 --> 00:16:28,690
So where I add it to the table panel, I'll
say, I'll say new Jscroll pane.

207
00:16:29,800 --> 00:16:34,576
Tables are really designed to be in scroll
panes, in jScroll

208
00:16:34,576 --> 00:16:40,007
panes, and then I'm gonna go to the table
model here, and I'm gonna

209
00:16:40,007 --> 00:16:44,972
right click here, and I'm gonna just go to
override implement

210
00:16:44,972 --> 00:16:50,030
methods, so source, override implement
methods, and I wanna

211
00:16:50,030 --> 00:16:54,901
override a method here, called
getcolumnsnames let's

212
00:16:54,901 --> 00:16:57,780
take that, and click OK.

213
00:16:57,780 --> 00:17:01,739
And this precedes the index of the column,
and returns the name of the column.

214
00:17:02,970 --> 00:17:09,950
So, now, I can have like, I up here, and
this stuff, column names.

215
00:17:09,950 --> 00:17:14,053
So let's say private, private string.

216
00:17:14,053 --> 00:17:16,540
Column names.

217
00:17:16,540 --> 00:17:21,570
And that could be a array of strings like
this.

218
00:17:24,950 --> 00:17:27,420
Like this.

219
00:17:27,420 --> 00:17:28,703
There we go.

220
00:17:28,703 --> 00:17:36,728
And I'm gonna set that equal to a bunch of
appropriate column names.

221
00:17:36,728 --> 00:17:41,958
So let's say equals and let's open a
[INAUDIBLE] parenthesis, close it there.

222
00:17:41,958 --> 00:17:50,309
And in here, I can type ID name, let's see
what else we've got down here.

223
00:17:50,309 --> 00:17:53,048
We've got occupation.

224
00:17:53,048 --> 00:17:58,740
Occupation, age, category,

225
00:17:58,740 --> 00:18:04,072
we got employment category.

226
00:18:04,072 --> 00:18:09,713
Employment category.

227
00:18:09,713 --> 00:18:18,517
US citizen and tax ID.

228
00:18:18,517 --> 00:18:22,350
Tax, Tax ID.

229
00:18:22,350 --> 00:18:23,469
Let's try that.

230
00:18:23,469 --> 00:18:27,981
And then here, I'm gonna just return and
call names

231
00:18:27,981 --> 00:18:32,117
and open up Array Reference bracket and
put in a colon

232
00:18:32,117 --> 00:18:35,971
there and again, this, this is never got
off the

233
00:18:35,971 --> 00:18:41,990
end here, 'cuz there're one, two, three,
four, five, six, seven.

234
00:18:43,210 --> 00:18:50,460
There's seven column names and I've said
that there're seven columns.

235
00:18:50,460 --> 00:18:54,020
So when it asks for the column name, it

236
00:18:54,020 --> 00:18:58,750
shouldn't direct exceed six, cuz it's
starting from zero.

237
00:18:58,750 --> 00:19:02,340
Now if I run that, we've got the column
names here.

238
00:19:02,340 --> 00:19:07,760
Let's just expand that and if I add to
some data in there, John,

239
00:19:07,760 --> 00:19:13,060
Software, Trainer, and click OK.

240
00:19:13,060 --> 00:19:20,490
Then it hunts me in there, now that'll do
for the moment.

241
00:19:20,490 --> 00:19:26,710
And, and in the next tutorial, and because
I want to build

242
00:19:26,710 --> 00:19:29,390
up a little bit of data to work with,
we're gonna look at

243
00:19:29,390 --> 00:19:32,900
how you can save this data despite
exporting it to a file, so

244
00:19:32,900 --> 00:19:37,110
we're gonna implement, this stuff
basically,

245
00:19:37,110 --> 00:19:38,780
that we have from the File menu.

246
00:19:38,780 --> 00:19:41,270
We're gonna look at serialization that
allows you

247
00:19:41,270 --> 00:19:44,810
to save objects like really easily with
minimal effort.

248
00:19:46,080 --> 00:19:49,611
and, we're gonna basically make these menu
items

249
00:19:49,611 --> 00:19:53,040
work, so that you can export and import
data.

250
00:19:53,040 --> 00:19:56,470
And each one will connect to a database,
but that will do for the moment.

251
00:19:57,492 --> 00:20:01,620
And once we've got that working, we can do
a bit more stuff with this table.

252
00:20:03,070 --> 00:20:08,520
So that's it for this tutorial, I
appreciate that this was pretty complex.

253
00:20:08,520 --> 00:20:11,012
But the essence of it isn't too

254
00:20:11,012 --> 00:20:13,962
complicated, and it's basically just if
you got

255
00:20:13,962 --> 00:20:19,650
a table, you need a table model, and my
table model extends Abstract Table model.

256
00:20:19,650 --> 00:20:24,150
And then you just fill in all the columns
or the, sorry

257
00:20:24,150 --> 00:20:29,198
methods that you need to implement, and
they're, they're pretty simple really.

258
00:20:29,198 --> 00:20:32,090
You get [INAUDIBLE] and get value out is
the

259
00:20:32,090 --> 00:20:35,710
one that gets the data for the row and
column.

260
00:20:35,710 --> 00:20:41,060
And the only little complication really,
was that if you

261
00:20:41,060 --> 00:20:46,218
actually update the data in your table,
you've gotta cause some

262
00:20:46,218 --> 00:20:50,400
kind of fire event method on the table
model, to actually

263
00:20:50,400 --> 00:20:53,820
tell the table that's looking at our model
to refresh itself.

264
00:20:55,560 --> 00:20:57,800
Okay, I think that's quite enough for this
tutorial.

265
00:20:57,800 --> 00:21:01,972
so, in the next tutorial as I said, we're
looking at serialization, which isn't

266
00:21:01,972 --> 00:21:03,911
strictly speaking a part of swing, but

267
00:21:03,911 --> 00:21:06,410
it's gonna be very useful for this
application.

268
00:21:06,410 --> 00:21:10,274
So join me again then, and until next
time, happy coding.

269
00:21:10,274 --> 00:21:13,284
[BLANK_AUDIO]

