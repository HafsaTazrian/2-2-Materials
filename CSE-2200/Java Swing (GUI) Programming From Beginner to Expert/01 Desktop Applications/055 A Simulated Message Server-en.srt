1
00:00:01,680 --> 00:00:02,080
Hello.

2
00:00:02,080 --> 00:00:05,440
This is John from caveofprogramming.com.

3
00:00:05,440 --> 00:00:10,430
And in this tutorial we're gonna create a
kinda, fake message

4
00:00:10,430 --> 00:00:15,180
server just so I can in the next tutorial
show you

5
00:00:16,370 --> 00:00:20,700
some multithreading in Swing and we can go
on to look at progress bars

6
00:00:22,770 --> 00:00:26,560
So we're not gonna look at anything Swing
specific in this tutorial.

7
00:00:27,620 --> 00:00:30,110
And if this doesn't interest you, then
feel free to

8
00:00:30,110 --> 00:00:33,800
skip it and it won't be a problem at all.

9
00:00:33,800 --> 00:00:36,460
But if you wanna kind of bit of a

10
00:00:36,460 --> 00:00:41,820
workout with Java collections and
iterators then stay tuned.

11
00:00:41,820 --> 00:00:46,530
And I might mention that also you can go
to caveofprogramming.com there

12
00:00:46,530 --> 00:00:51,370
you can find lots of free tutorials on the
Java collections framework.

13
00:00:52,580 --> 00:00:56,500
So which we're going to be using sensibly
in this tutorial.

14
00:00:56,500 --> 00:01:00,550
But I won't specifically cover how this
works in depth cuz

15
00:01:00,550 --> 00:01:04,156
it's kind of taken us away from suite
programming a little bit.

16
00:01:04,156 --> 00:01:09,360
So I'm, I'm not gonna have like a data
model for

17
00:01:09,360 --> 00:01:14,680
my message server because it's gonna be a
sort of fake message server.

18
00:01:14,680 --> 00:01:17,780
I'm just gonna implement a controller, and
we're gonna sort

19
00:01:17,780 --> 00:01:22,220
of pretend that this this controller is
getting data from somewhere.

20
00:01:23,220 --> 00:01:29,550
Now the first thing I'm gonna do here is a
I'm gonna go to new class in the model.

21
00:01:29,550 --> 00:01:35,695
And I'm gonna create a, just a very simple
class models the message.

22
00:01:35,695 --> 00:01:43,440
So I'll give that a private string title
and a private string content.

23
00:01:43,440 --> 00:01:45,680
So this like an email message or something
like that.

24
00:01:45,680 --> 00:01:53,200
And let's right click, go to Source >
Generate Constructor using Fields.

25
00:01:53,200 --> 00:01:57,408
And let's also right click > Source >
Generate Getters and Setters.

26
00:01:57,408 --> 00:02:00,938
I'll Generate Getters and Setters for
content and

27
00:02:00,938 --> 00:02:04,700
the title and Ctrl + Shift after format
there.

28
00:02:04,700 --> 00:02:10,840
So that's my message class, install title
and contents of my message.,

29
00:02:10,840 --> 00:02:17,100
and I'm gonna right click my controller
here and create a class which I'll call

30
00:02:17,100 --> 00:02:21,590
Don't really know what to call it, let's
call it MessageServer, maybe.

31
00:02:22,710 --> 00:02:28,838
And, MessageServer is, it's gonna have a

32
00:02:28,838 --> 00:02:35,610
map of messages where the key in the map
is gonna be the server

33
00:02:35,610 --> 00:02:41,810
ID and the value is gonna be a list of
messages, message objects.

34
00:02:41,810 --> 00:02:46,890
So for each server, and each server has a
number, we've got zero through to four.

35
00:02:46,890 --> 00:02:50,950
We're gonna have a list of messages that
we imagine in are on

36
00:02:50,950 --> 00:02:55,670
the server, but in reality, they're gonna
be stored in this state structure here.

37
00:02:55,670 --> 00:03:03,575
So let's call that Messages and I'll give
this a constructor, public MessageServer.

38
00:03:05,130 --> 00:03:10,939
And in MessageServer, let's have imports
there, module.message type import list.

39
00:03:12,050 --> 00:03:16,661
Let's say messages equals new needs a new.

40
00:03:16,661 --> 00:03:20,528
Well, I can use treemap because that'll
keep

41
00:03:20,528 --> 00:03:24,502
this sorted in order of ID server ID
there.

42
00:03:24,502 --> 00:03:28,268
Although I'm not really sure it matters.

43
00:03:28,268 --> 00:03:31,653
It's going to be server map of, well the
type

44
00:03:31,653 --> 00:03:35,762
is going to be exactly the same as this
basically.

45
00:03:35,762 --> 00:03:39,028
So let's copy that and round brackets
there.

46
00:03:41,060 --> 00:03:42,940
So I've got a data struc-,

47
00:03:42,940 --> 00:03:45,000
a data structure now that can store my
messages.

48
00:03:45,000 --> 00:03:45,500
And

49
00:03:47,780 --> 00:03:52,620
let's add a like two or three dummy
messages to that.

50
00:03:52,620 --> 00:03:54,890
And I'm gonna add more, but I'll do that
kind of

51
00:03:54,890 --> 00:03:59,250
off screen because there's no reason to
bore you with that.

52
00:03:59,250 --> 00:04:03,450
So I'm gonna say let's have a list

53
00:04:05,920 --> 00:04:09,400
let's call this let's call.

54
00:04:09,400 --> 00:04:12,470
Well, this'll be list of messages, message
objects, and it's

55
00:04:12,470 --> 00:04:15,620
just a temporary variable really, so I'll
call it list.

56
00:04:15,620 --> 00:04:23,460
And set that equal to new ArrayList of
message objects.

57
00:04:23,460 --> 00:04:25,810
Let's start a couple of messages to this.

58
00:04:25,810 --> 00:04:35,720
So say list.add new message and the title
can be the cat is missing.

59
00:04:37,340 --> 00:04:42,790
Have you seen Felix anywhere?

60
00:04:44,210 --> 00:04:45,080
That should do the trick.

61
00:04:46,950 --> 00:04:49,009
And let's copy that.

62
00:04:50,355 --> 00:04:52,610
And I'll have a new one of those.

63
00:04:52,610 --> 00:04:57,750
Not meant to copy it, let's add the import
actually for ArrayList.

64
00:04:57,750 --> 00:05:01,860
Copy this, and add another one, and let's
say

65
00:05:04,180 --> 00:05:06,499
see you later question mark.

66
00:05:07,790 --> 00:05:12,598
Are we still meeting in the pub?

67
00:05:12,598 --> 00:05:18,573
And let's then, then I can say

68
00:05:18,573 --> 00:05:24,340
messages.port and I'll give it the ID of
the Washing-,

69
00:05:24,340 --> 00:05:26,856
I think New York, maybe the New York
server and

70
00:05:26,856 --> 00:05:30,310
the ID zero because it doesn't matter
which one it is.

71
00:05:30,310 --> 00:05:35,810
I'll say messages.port and then let's add
this list in there.

72
00:05:35,810 --> 00:05:38,660
So two messages for this particular server
with ID zero.

73
00:05:39,690 --> 00:05:43,390
And then, I'm gonna just copy this.

74
00:05:43,390 --> 00:05:46,880
Let's add a couple for server with ID one
maybe.

75
00:05:46,880 --> 00:05:48,930
And let's just say

76
00:05:52,660 --> 00:05:57,590
how about dinner later, and let's say

77
00:05:59,570 --> 00:06:06,360
are you doing anything later, later on?

78
00:06:06,360 --> 00:06:06,860
Okay.

79
00:06:08,180 --> 00:06:14,340
And I'll just have one message there, and
that can be one message for.

80
00:06:14,340 --> 00:06:17,980
And actually, these are ridiculous
messages because this is kind of, the

81
00:06:17,980 --> 00:06:22,320
idea is it's not user specific, but it's
just, add new messages

82
00:06:22,320 --> 00:06:26,230
in this application that retrieve from
somewhere, but you know, this text

83
00:06:26,230 --> 00:06:30,010
doesn't actually matter, it's really just
a demo of swing widgets ultimately.

84
00:06:30,010 --> 00:06:34,270
So I'm just kinda trying to make this
plausible, but it's not necessarily

85
00:06:34,270 --> 00:06:40,090
going to make complete sense in terms of
what the application really does.

86
00:06:40,090 --> 00:06:43,700
So so that fills up our message list.

87
00:06:45,000 --> 00:06:49,830
I'm going to have another private well a
private list.

88
00:06:51,800 --> 00:06:56,212
Which will be a list of messages, and I'm
going to call this Selected.

89
00:06:56,212 --> 00:07:01,510
And Selected is gonna be a

90
00:07:02,610 --> 00:07:08,070
array list of messages and its gonna be an
array

91
00:07:08,070 --> 00:07:13,100
list of the messages on the selected
servers so the tree

92
00:07:13,100 --> 00:07:17,900
is gonna allow us to select servers, or
deselect servers.

93
00:07:17,900 --> 00:07:19,090
And I'm gonna have a meth-,

94
00:07:19,090 --> 00:07:24,370
method here, and let's maximize the
editor, called, it's gonna be public void

95
00:07:24,370 --> 00:07:31,850
set selected servers and that's gonna
accept a set of integers.

96
00:07:34,250 --> 00:07:37,110
And lets save ID's, here.

97
00:07:37,110 --> 00:07:38,680
Well, maybe I'll call it servers.

98
00:07:38,680 --> 00:07:40,720
It's gonna be server ID's.

99
00:07:40,720 --> 00:07:46,339
So you'll pass in a set of server ID's,

100
00:07:46,339 --> 00:07:51,129
and then for each int-,

101
00:07:51,129 --> 00:07:54,700
integer ID in servers.

102
00:07:54,700 --> 00:07:55,550
Let's make that servers.

103
00:07:57,140 --> 00:08:01,040
Then we'll get the list of messages from
the map here.

104
00:08:01,040 --> 00:08:05,257
So I'll say if

105
00:08:06,311 --> 00:08:11,057
messages.contains

106
00:08:11,057 --> 00:08:16,065
key ID, then I'll say

107
00:08:17,119 --> 00:08:23,236
list message Let's call this I don't know.

108
00:08:23,236 --> 00:08:28,520
Server message, messages equals and from
the map,

109
00:08:28,520 --> 00:08:34,524
messages I can say messages.get will get
the messages

110
00:08:34,524 --> 00:08:40,060
for that server and then add them to the
selected list.

111
00:08:40,060 --> 00:08:41,550
So selected.addAll.

112
00:08:45,430 --> 00:08:49,740
And if I can do that in one step, I can
say, messages.getID.

113
00:08:49,740 --> 00:08:54,280
And I can do, so add all, add all the
messages.

114
00:08:54,280 --> 00:08:57,430
So, what I'm doing is, I'm going, for each
integer of

115
00:08:57,430 --> 00:09:02,560
ID in this set, I'm getting all the
messages that are supposedly

116
00:09:02,560 --> 00:09:05,840
on that server and I'm adding them to the
list of selected

117
00:09:05,840 --> 00:09:11,050
messages, and before I do that I'll also
remember to do selected.clear.

118
00:09:11,050 --> 00:09:14,180
So clear out the messages in the selected
list,

119
00:09:14,180 --> 00:09:16,140
because we want to create a new selected
list.

120
00:09:17,780 --> 00:09:21,150
Now, I'm gonna give this a let's see,

121
00:09:21,150 --> 00:09:22,810
what's wrong with this, I forgot a
semi-colon.

122
00:09:22,810 --> 00:09:30,751
Now, I'm gonna give this a message called
public void getMessageCount,

123
00:09:30,751 --> 00:09:36,940
and that's just gonna return, return
selected.size.

124
00:09:36,940 --> 00:09:40,470
So the size, the number of messages
waiting to

125
00:09:40,470 --> 00:09:44,160
be downloaded so to speak, and that's
gonna be

126
00:09:46,390 --> 00:09:46,740
int.

127
00:09:46,740 --> 00:09:49,520
And actually, let's put a comment up here
cuz I don't want anyone running

128
00:09:49,520 --> 00:09:54,090
away with the idea that this is a real
message server, which it clearly isn't.

129
00:09:54,090 --> 00:10:02,790
So this is a sort of simulated message
server.

130
00:10:05,070 --> 00:10:05,570
Okay.

131
00:10:08,000 --> 00:10:12,280
And now I want to make it iterable, cuz I
think that would be nice.

132
00:10:12,280 --> 00:10:17,210
I want to be able to say, back in well,
well, let's deal

133
00:10:17,210 --> 00:10:22,210
with setting the selected messages for
start, because back in message panel

134
00:10:22,210 --> 00:10:27,130
here, what I can do here, is I can

135
00:10:27,130 --> 00:10:33,218
have up here a private SetInteger.

136
00:10:33,218 --> 00:10:39,646
And this gonna be selected servers.

137
00:10:39,646 --> 00:10:44,586
And in the constructor here, let's have
the set import and the

138
00:10:44,586 --> 00:10:50,230
constructor says selected servers equals
new and let's have TreeSet.

139
00:10:50,230 --> 00:10:56,106
TreeSet is sorted in my asset integer.

140
00:10:56,106 --> 00:11:01,904
So that's just a set of integers and I'm
gonna add to that a couple

141
00:11:01,904 --> 00:11:07,334
of server ID, so I've selectedServers.art
let's have zero.

142
00:11:07,334 --> 00:11:07,860
And.

143
00:11:07,860 --> 00:11:11,910
Let's have, let's have also

144
00:11:14,160 --> 00:11:23,280
maybe one and maybe four, and then if I
add the TreeSet import, Ctrl+Shift+O.

145
00:11:23,280 --> 00:11:25,991
Now when I create my tree nodes to

146
00:11:25,991 --> 00:11:30,210
see whether they are initially selected or
not.

147
00:11:30,210 --> 00:11:36,358
I'm gonna say selected sell,
selectedServers.contains and the

148
00:11:36,358 --> 00:11:42,420
ID and that will return true only if ID is
currently in the selected set.

149
00:11:43,490 --> 00:11:46,980
So, and let's add that to these other
servers as well.

150
00:11:46,980 --> 00:11:54,740
So it's going to be one and this is gonna
be two and you can add it here.

151
00:11:54,740 --> 00:11:56,938
It's going to be three.

152
00:11:56,938 --> 00:11:58,890
And finally, you can add it here.

153
00:11:58,890 --> 00:12:00,360
Four, Edinburgh.

154
00:12:02,670 --> 00:12:06,150
And I'm gonna add and remove selected
servers from this

155
00:12:06,150 --> 00:12:10,150
list, depending on whether the tree leaves
are checked or not.

156
00:12:10,150 --> 00:12:11,710
Whether the checkbox is checked or not.

157
00:12:11,710 --> 00:12:15,580
And so, here I'm gonna say, int-,

158
00:12:15,580 --> 00:12:18,800
server ID, equals info.getID.

159
00:12:18,800 --> 00:12:25,620
And this is in the, this is in that cell
editor listener response class.

160
00:12:25,620 --> 00:12:27,680
So this will occur, this code will occur
here.

161
00:12:28,770 --> 00:12:30,340
You might recall from the last tutorial if

162
00:12:30,340 --> 00:12:33,420
someone checks a checkbox or, or if, or
not.

163
00:12:33,420 --> 00:12:39,012
Or only checks it, I can say if
info.isChecked,

164
00:12:39,012 --> 00:12:43,817
then we wanna add the server ID to the
list.

165
00:12:43,817 --> 00:12:49,147
So selected, selectedService.addID.

166
00:12:49,147 --> 00:12:50,481
Server ID.

167
00:12:50,481 --> 00:12:54,300
Otherwise, we want to remove it from the
list.

168
00:12:54,300 --> 00:12:56,150
And of course, since this is a set.

169
00:12:56,150 --> 00:13:00,130
Since selectedService is a set, I think
it's wise.

170
00:13:00,130 --> 00:13:02,460
Won't do any harm at all.

171
00:13:02,460 --> 00:13:06,910
Because set will only store unique values
in any case.

172
00:13:06,910 --> 00:13:08,050
Okay?

173
00:13:08,050 --> 00:13:11,651
So serverID.

174
00:13:11,651 --> 00:13:16,332
I think that should do the trick.

175
00:13:16,332 --> 00:13:17,910
Oh, I spelled this wrong, or something.

176
00:13:19,950 --> 00:13:20,310
whoops.

177
00:13:20,310 --> 00:13:22,900
Didn't mean to do that, copy serverID.

178
00:13:22,900 --> 00:13:28,150
Paste it there, add the semicolon and now,

179
00:13:28,150 --> 00:13:34,310
we can say I can create a message server
object here.

180
00:13:34,310 --> 00:13:42,932
So, here I can say, private message,
messageServer

181
00:13:42,932 --> 00:13:46,750
messageServer.

182
00:13:46,750 --> 00:13:55,980
And down here I can say messageServer
equals new messageServer.

183
00:13:55,980 --> 00:14:02,600
And now let's say here, when someone
checks or unchecks

184
00:14:02,600 --> 00:14:08,671
the tree leaf, message
server.setSelectedServers

185
00:14:08,671 --> 00:14:12,470
and pass in the selected servers ID list.

186
00:14:15,234 --> 00:14:19,055
And then I can say sysout

187
00:14:19,055 --> 00:14:24,454
messageServer Well, I can

188
00:14:24,454 --> 00:14:30,244
say, message is waiting, plus

189
00:14:30,244 --> 00:14:36,682
messageServer.getMessageCam.

190
00:14:36,682 --> 00:14:37,804
Okay.

191
00:14:37,804 --> 00:14:41,282
And let's see if that works or not.

192
00:14:41,282 --> 00:14:45,610
So I'll go to my tree here, and I'll tick
off, untick something.

193
00:14:45,610 --> 00:14:47,952
I got one message waiting, I tick New

194
00:14:47,952 --> 00:14:51,350
York's, and I got three waiting, I tick
Boston.

195
00:14:51,350 --> 00:14:54,906
Go to Los Angeles won't make any
difference because I didn't

196
00:14:54,906 --> 00:14:57,820
add any for Los Angeles, but it seems to
be working.

197
00:14:57,820 --> 00:15:04,169
And now I'd like to be able to say here,
if there are

198
00:15:04,169 --> 00:15:10,076
messages waiting, I'd like to be able to
say,

199
00:15:10,076 --> 00:15:16,638
for message, message in message server.

200
00:15:16,638 --> 00:15:22,230
Then get the message basically.

201
00:15:22,230 --> 00:15:31,630
I can say here, sysout message.getTitle

202
00:15:31,630 --> 00:15:32,810
just for the moment.

203
00:15:32,810 --> 00:15:36,530
But the point in doing this is when I've
implemented this behavior

204
00:15:36,530 --> 00:15:40,740
here, I'm gonna make this very slow, and
in the next tutorial we're

205
00:15:40,740 --> 00:15:45,860
gonna look at adding multithreading to
this so that this can happen in

206
00:15:45,860 --> 00:15:49,850
a separate thread and it doesn't lock up
the rest of the application.

207
00:15:49,850 --> 00:15:52,260
But now for the rest of this tutorial,
which is gonna look at

208
00:15:52,260 --> 00:15:54,670
implementing this behavior, so that you
can

209
00:15:54,670 --> 00:15:57,230
iterate through the message server like
this.

210
00:15:58,650 --> 00:16:06,510
And to do that, I need to say here,
implement iterable like this.

211
00:16:06,510 --> 00:16:08,550
and, I kinda think I mentioned it already,
but there is,

212
00:16:08,550 --> 00:16:10,246
there are free tutorials on

213
00:16:10,246 --> 00:16:13,229
caveofprogramming.com on this kind of
stuff.

214
00:16:14,410 --> 00:16:19,750
So lets do Ctrl+Shift+O and I'm gonna make
it implement

215
00:16:19,750 --> 00:16:26,090
iterable templated, our messages, to our
message.

216
00:16:26,090 --> 00:16:28,780
So it's gonna be something that can
iterate through

217
00:16:28,780 --> 00:16:32,610
different messages, and that's, I think,
unimplemented methods there.

218
00:16:32,610 --> 00:16:38,020
And I need to return a iterator here.

219
00:16:39,130 --> 00:16:44,440
So to do that I'm gonna create a class
that can iterate through

220
00:16:44,440 --> 00:16:49,400
my iterate very slowly through my selected
messages.

221
00:16:50,910 --> 00:16:54,112
So let's let's maybe do that down here.

222
00:16:54,112 --> 00:16:58,959
And, I'm gonna say, class,

223
00:16:58,959 --> 00:17:04,769
message, iterator implement.

224
00:17:04,769 --> 00:17:07,700
iterator, iterator.

225
00:17:09,070 --> 00:17:11,740
And set the import.

226
00:17:11,740 --> 00:17:14,335
And now I can add the missing methods for
that.

227
00:17:16,145 --> 00:17:21,115
And I'm gonna make this, give this
constructor public MessageIterator and

228
00:17:21,115 --> 00:17:29,285
that's gonna accept a list of messages to
iterate through.

229
00:17:30,425 --> 00:17:31,979
So, and we'll call that messages.

230
00:17:34,468 --> 00:17:38,810
And it's going to get an iterator from

231
00:17:38,810 --> 00:17:41,910
this actual list which is basically going
to run.

232
00:17:41,910 --> 00:17:48,659
So we'll have a private iterator,
IteratorMessage.

233
00:17:48,659 --> 00:17:51,620
And I'm going to call it iterator.

234
00:17:52,838 --> 00:17:56,010
And here in the constructor we'll pass it
a list of messages straight through.

235
00:17:56,010 --> 00:17:58,348
And we'll just say iterator.

236
00:17:58,348 --> 00:18:05,782
Iterator equals messages.iterator,

237
00:18:05,782 --> 00:18:10,592
and now has next can simply

238
00:18:10,592 --> 00:18:15,402
return, return iterator

239
00:18:15,402 --> 00:18:19,561
iterator.hasNext.

240
00:18:19,561 --> 00:18:24,649
So we are just wrapping the iterator of
the

241
00:18:24,649 --> 00:18:29,998
list of messages and remove, not that I
need it,

242
00:18:29,998 --> 00:18:35,092
but let's just kind of do iterator.remove.

243
00:18:35,092 --> 00:18:44,809
And next it's going to do, it's going to
return iterator, iterator.next.

244
00:18:44,809 --> 00:18:46,796
Next, there we go.

245
00:18:46,796 --> 00:18:48,652
Next step, I'm going to put a delay in
there, here.

246
00:18:48,652 --> 00:18:53,145
So I'm going to say thread.sleep to
simulate

247
00:18:53,145 --> 00:18:58,166
the slow retrieval of messages from a
server somewhere.

248
00:18:58,166 --> 00:19:00,962
Now let's just wrap that and I need to
catch

249
00:19:00,962 --> 00:19:05,469
an exception there, so I'll just wrap that
in a try-catch.

250
00:19:05,469 --> 00:19:14,089
I think that's everything so now, I can
give when this iterator message here.

251
00:19:14,089 --> 00:19:17,659
Sorry, this iterator method or it is a
message, if you like.

252
00:19:17,659 --> 00:19:20,336
You can say return here.

253
00:19:20,336 --> 00:19:30,100
Return new message iterator and wrap the
selected list of messages.

254
00:19:31,550 --> 00:19:35,860
And now, with a bit of luck my message
panel once

255
00:19:35,860 --> 00:19:41,480
it gets, once you check or uncheck it tree
leaf it will

256
00:19:41,480 --> 00:19:44,960
get the number of messages, and then with
the interface locked up,

257
00:19:44,960 --> 00:19:49,930
which is very unsatisfactory, it's gonna
iterate very slowly through the messages.

258
00:19:49,930 --> 00:19:50,800
Let's see that working.

259
00:19:51,800 --> 00:19:56,120
Let's go to the message window here, and
check New York.

260
00:19:56,120 --> 00:20:00,760
It's got one message from New York
retrieved at a very slow

261
00:20:00,760 --> 00:20:05,970
pace, so I want to untick New York and see
it's like locked.

262
00:20:05,970 --> 00:20:12,340
If I click on tabs, you know, while it's
writing through stuff, then I don't get

263
00:20:12,340 --> 00:20:16,000
a whole lot of response until it finishes,

264
00:20:16,000 --> 00:20:17,760
and you can see the messages appearing
here.

265
00:20:17,760 --> 00:20:19,860
Now what we're gonna do in the next

266
00:20:19,860 --> 00:20:24,760
tutorial is we're gonna look at using
multithreading to

267
00:20:24,760 --> 00:20:28,260
run this stuff in a separate thread so it

268
00:20:28,260 --> 00:20:30,400
doesn't lock up your interface while
you're retrieving it.

269
00:20:30,400 --> 00:20:32,450
And then after that, we're gonna go on to
look at progress

270
00:20:32,450 --> 00:20:37,509
bars, which is my real purpose in in
dealing with this stuff.

271
00:20:38,750 --> 00:20:43,110
So that's it for this tutorial and a bit
of diversion but hopefully useful.

272
00:20:43,110 --> 00:20:47,406
And I just though I'd throw this video in,
in case you want to see, see this stuff.

273
00:20:47,406 --> 00:20:49,792
And join me again next time when

274
00:20:49,792 --> 00:20:53,385
we'll incur multithreading in Swing worker
class.

275
00:20:53,385 --> 00:20:55,980
And until then happy coding.

