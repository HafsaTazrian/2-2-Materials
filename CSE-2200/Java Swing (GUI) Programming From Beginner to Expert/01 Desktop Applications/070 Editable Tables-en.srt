1
00:00:02,410 --> 00:00:03,080
Hello.

2
00:00:03,080 --> 00:00:07,470
In this tutorial we're gonna knock, making
your tables editable.

3
00:00:08,980 --> 00:00:13,720
So if you use the default table model that
you can use with the Jtable.

4
00:00:15,290 --> 00:00:17,370
Your table will be editable by default.

5
00:00:17,370 --> 00:00:19,609
In this tutorial we've actually created
our own model.

6
00:00:20,740 --> 00:00:24,880
And it's in this gooey package and its
person table model.

7
00:00:25,880 --> 00:00:31,335
And, if you create your own table model,
which I think is worth doing, cause it

8
00:00:31,335 --> 00:00:34,347
gives you a lot more control, you gotta

9
00:00:34,347 --> 00:00:37,863
do a couple things, make a column editable
[SOUND].

10
00:00:37,863 --> 00:00:42,650
And, in this tutorial, I'm just gonna make
one column editable.

11
00:00:42,650 --> 00:00:45,800
And we will, we'll look at a couple of
other cases in future tutorials.

12
00:00:45,800 --> 00:00:49,390
But I'm gonna make this, name column here,
editable.

13
00:00:50,830 --> 00:00:54,130
So, to do this, it's, it's pretty simple.

14
00:00:55,720 --> 00:01:01,470
The first thing to do is, in your,
Actually,

15
00:01:01,470 --> 00:01:02,890
maybe it's, maybe it's the only thing to
do.

16
00:01:02,890 --> 00:01:04,080
I'm trying to think.

17
00:01:04,080 --> 00:01:06,610
Okay, so let's have a look.

18
00:01:06,610 --> 00:01:09,540
So in your model class, your table model
has to

19
00:01:09,540 --> 00:01:16,500
override well, in this case, it extends
abstract table model.

20
00:01:16,500 --> 00:01:23,800
And you need to return true, if you want a
particular cell to be editable.

21
00:01:23,800 --> 00:01:27,060
And a particular method, which we're going
to hae to override here.

22
00:01:27,060 --> 00:01:30,030
So I'm going to right-click in my
personTableModel class and

23
00:01:30,030 --> 00:01:34,430
I'm going to go to source > override
implement methods.

24
00:01:34,430 --> 00:01:38,530
And down here, we've got this
isCellEditable method.

25
00:01:39,616 --> 00:01:45,190
Then click OK there and to make yeah,
actually, we're gonna have to

26
00:01:45,190 --> 00:01:49,860
override this method and it's gonna be one
other thing to do as well.

27
00:01:49,860 --> 00:01:55,200
So, so you've got a class, it extends
abstract table model and you

28
00:01:55,200 --> 00:01:59,480
override the is cell editable method and
that gets passed in a row index.

29
00:01:59,480 --> 00:02:03,470
It's in a column index which are
zero-based.

30
00:02:03,470 --> 00:02:10,950
In this case I wanna say that, any row in
column one is gonna be editable.

31
00:02:10,950 --> 00:02:14,070
So I need to say, let's do switch.

32
00:02:14,070 --> 00:02:18,036
Switch, call, and then say.

33
00:02:18,036 --> 00:02:23,070
Case one return true.

34
00:02:23,070 --> 00:02:29,340
Let's say the default is default return
false.

35
00:02:31,730 --> 00:02:35,190
So I'm going to return false to say all
the columns are not editable

36
00:02:35,190 --> 00:02:39,360
except for this column one, which is gonna
be, is going to be editable.

37
00:02:39,360 --> 00:02:44,052
Actually, if I already run that you'll
already see that [INAUDIBLE].

38
00:02:44,052 --> 00:02:46,900
And by the way, I've also in the
constructor.

39
00:02:46,900 --> 00:02:50,030
I should have explained that.

40
00:02:50,030 --> 00:02:53,520
So in main frame, we've got codes.

41
00:02:53,520 --> 00:02:56,350
We had code previously that refreshed the.

42
00:02:58,460 --> 00:03:00,270
That reloaded the database, sorry.

43
00:03:01,730 --> 00:03:04,490
So you've got a refresh button, and if

44
00:03:04,490 --> 00:03:07,590
someone clicks refresh we get a refresh
event occurred.

45
00:03:07,590 --> 00:03:10,370
And there was a loaded code in there, but
I moved it to

46
00:03:10,370 --> 00:03:15,790
it's own refresh method in mainframe and
I'm now calling that in constructor.

47
00:03:15,790 --> 00:03:18,170
So let's just a look and that means that
my

48
00:03:18,170 --> 00:03:24,630
data loads automatically if it can when
when the application runs.

49
00:03:24,630 --> 00:03:27,250
So yep, we got a refresh call there.

50
00:03:27,250 --> 00:03:28,720
Anyway, that's nothing to do with this
tutorial.

51
00:03:28,720 --> 00:03:30,090
I just wanted to quickly explain.

52
00:03:31,230 --> 00:03:33,490
So I've overwrite, overwritten my
[UNKNOWN]

53
00:03:33,490 --> 00:03:36,700
editable method in the table model.

54
00:03:36,700 --> 00:03:39,338
And now it already means that I can edit.

55
00:03:39,338 --> 00:03:44,010
If I double-click there I can edit the
name, but as soon as I finish editing if

56
00:03:44,010 --> 00:03:46,710
I hit, hitting return it's not gonna
remember that

57
00:03:46,710 --> 00:03:50,110
value, it's gonna go back to the cell
renderer.

58
00:03:50,110 --> 00:03:56,480
Which is gonna use the value stored by the
data model for this table.

59
00:03:56,480 --> 00:04:00,640
So, the second thing I need to do is I
need to

60
00:04:01,970 --> 00:04:06,740
override a method here, let's go to, let's
right click, and go to

61
00:04:06,740 --> 00:04:11,830
source, override implement methods and
it's a method.

62
00:04:11,830 --> 00:04:14,110
Called set value at.

63
00:04:14,110 --> 00:04:16,160
So I'm gonna click OK there.

64
00:04:16,160 --> 00:04:22,040
And again here, we've got a row index and
column index and we've

65
00:04:22,040 --> 00:04:24,910
got a value that we want to set for that
row and column.

66
00:04:24,910 --> 00:04:30,226
I'm gonna get rid of the [UNKNOWN] here
and I'm just going to say, again.

67
00:04:30,226 --> 00:04:33,940
Switch call, switch call.

68
00:04:33,940 --> 00:04:37,570
And the default is, is going to do
nothing.

69
00:04:37,570 --> 00:04:39,720
It's going to return.

70
00:04:39,720 --> 00:04:42,620
But case 1, so if we've got column 1 here.

71
00:04:42,620 --> 00:04:45,780
I'm going to do something, and then you
mustn't forget the break.

72
00:04:45,780 --> 00:04:47,630
Otherwise, you'll carry on down here.

73
00:04:47,630 --> 00:04:50,630
And I'm going to say.

74
00:04:50,630 --> 00:04:52,910
Here where we want to set the value at

75
00:04:54,190 --> 00:04:57,110
whichever row and column this is in our
database.

76
00:04:57,110 --> 00:05:00,070
And this table model a, is actually
storing

77
00:05:00,070 --> 00:05:05,190
the values in this in this kind of list.

78
00:05:05,190 --> 00:05:08,630
This list of person objects.

79
00:05:08,630 --> 00:05:12,950
And that's that's that's eb that database
list.

80
00:05:12,950 --> 00:05:16,220
Is set down here and called set data.

81
00:05:17,750 --> 00:05:23,920
So let's just actually, let's just check
and say if DB equals null.

82
00:05:23,920 --> 00:05:25,490
And we can't do anything.

83
00:05:25,490 --> 00:05:27,350
Well, not in this, sorry.

84
00:05:27,350 --> 00:05:30,910
In the setValue method.

85
00:05:30,910 --> 00:05:33,150
We want to say, okay, if there's not data
then just return.

86
00:05:33,150 --> 00:05:35,560
Because we're not going to do anything
with it.

87
00:05:35,560 --> 00:05:38,480
If DB equals no return.

88
00:05:38,480 --> 00:05:40,010
Just return.

89
00:05:40,010 --> 00:05:41,769
But now, if the DB is not equal to null.

90
00:05:43,460 --> 00:05:48,740
We can set the value in this list of
person objects.

91
00:05:48,740 --> 00:05:56,990
So I can probably the easiest thing to do
is just to get the reference from the

92
00:05:56,990 --> 00:06:00,530
person, so I can say, like person I

93
00:06:00,530 --> 00:06:03,510
need to get the reference so that person
object.

94
00:06:03,510 --> 00:06:11,350
The specified column or row yeah
[INAUDIBLE] here is getting a bit tricky.

95
00:06:11,350 --> 00:06:14,610
Okay, this, this list has elements in it
and

96
00:06:14,610 --> 00:06:18,720
the elements, yeah, correspond to the rows
in the table.

97
00:06:18,720 --> 00:06:24,960
So element 1 in this list is going to be
row 0 in the table.

98
00:06:24,960 --> 00:06:28,540
In other words, well the first element is
going to be row 0.

99
00:06:28,540 --> 00:06:33,099
So, I want say person,person equals

100
00:06:34,790 --> 00:06:40,680
DV dot get, .get, if that will do the
trick.

101
00:06:40,680 --> 00:06:42,930
So I'm just getting from my list the
person

102
00:06:42,930 --> 00:06:45,220
that I want to change and reference that
person.

103
00:06:45,220 --> 00:06:48,650
And let's put this up here, actually, cuz
I'm gonna need to do this for

104
00:06:48,650 --> 00:06:54,580
any value and then here I can just set the
value and say person dot set.

105
00:06:54,580 --> 00:06:58,170
And in this case, call him on its name,
and I just want

106
00:06:58,170 --> 00:07:01,510
to set him a new name, which will be the
value paste in here.

107
00:07:01,510 --> 00:07:05,920
I just want to cache that to a string,
like that.

108
00:07:07,870 --> 00:07:10,700
So it's pretty simple really, all you have
to do is

109
00:07:10,700 --> 00:07:12,670
you get the value, your given a row and a
column.

110
00:07:12,670 --> 00:07:15,190
And you just set the value in whatever
data model you're using.

111
00:07:15,190 --> 00:07:20,460
Flat row and column, casting this value to
an appropriate, appropriate value.

112
00:07:20,460 --> 00:07:23,110
It's going to be string in this case.

113
00:07:23,110 --> 00:07:25,670
And now, if I run that, hopefully, oh
yeah.

114
00:07:25,670 --> 00:07:31,720
I also want to explain so although we're
doing db dot get, db is a list.

115
00:07:31,720 --> 00:07:33,010
We're doing get from the list.

116
00:07:34,640 --> 00:07:39,350
This reference will simply point at a
value that's actually in the list.

117
00:07:39,350 --> 00:07:43,680
So if we change this, we're changing the
person objects in this list.

118
00:07:43,680 --> 00:07:46,340
And that's why this, this is gonna work.

119
00:07:46,340 --> 00:07:47,370
So if I run this now.

120
00:07:49,220 --> 00:07:52,290
And let's change this to Joe, Joe Smith,
Joe Smith.

121
00:07:53,300 --> 00:07:55,460
And hey, presto, now it's Joe Smith.

122
00:07:55,460 --> 00:07:58,340
Now I'm now gonna save that and load it
again.

123
00:07:58,340 --> 00:08:00,340
And if I run my application again.

124
00:08:00,340 --> 00:08:06,930
i feel flushed with success now and then
it's dismissed in

125
00:08:06,930 --> 00:08:09,620
future we're gonna look at setting a
couple of these other

126
00:08:09,620 --> 00:08:13,980
values and that's going to be a little
more complex well

127
00:08:13,980 --> 00:08:18,400
maybe not so join me again next time and
until next time.

128
00:08:18,400 --> 00:08:19,400
Happy coding.

