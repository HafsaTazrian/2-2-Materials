1
00:00:01,580 --> 00:00:05,893
Hello again, this is John from
caveofprograming.com

2
00:00:05,893 --> 00:00:08,350
and this is a tutorial on how to

3
00:00:08,350 --> 00:00:12,400
separate your components in your swing
application

4
00:00:12,400 --> 00:00:15,670
to maintain that kind of simple clear
architecture.

5
00:00:15,670 --> 00:00:18,150
So in the last tutorial I showed you how
to.

6
00:00:18,150 --> 00:00:24,020
Play this little app and the problem with
this is that I've got a tightly coupled

7
00:00:24,020 --> 00:00:32,200
tool bar and text area and I've got my
main frame here, which is responsible.

8
00:00:32,200 --> 00:00:36,230
It's more for creating the components I've
got

9
00:00:36,230 --> 00:00:38,820
two components, the toolbar and a text
panel.

10
00:00:38,820 --> 00:00:40,880
But the trouble is that the toolbar

11
00:00:40,880 --> 00:00:44,490
is communicating, directly with the text
panel which

12
00:00:44,490 --> 00:00:47,600
is not healthy, because we want all
communication

13
00:00:47,600 --> 00:00:50,490
to go through our controller, the main
frame.

14
00:00:52,900 --> 00:01:00,670
Now, to do that, I'm gonna just use, to
start with, a simple interface, because,

15
00:01:00,670 --> 00:01:07,710
I wanna have the idea of a thing that can
receive messages, that

16
00:01:07,710 --> 00:01:12,520
contain strings, so all the toolbar
already does in a moment, is,

17
00:01:13,695 --> 00:01:18,740
It's, when you click, when you click one
of those two buttons, it sort of emits

18
00:01:18,740 --> 00:01:21,020
a string that's either hello or goodbye.

19
00:01:21,020 --> 00:01:24,400
And the first step here is I want to
codify the

20
00:01:24,400 --> 00:01:28,350
idea of a thing that can receive that
hello or goodbye string.

21
00:01:29,660 --> 00:01:33,649
So, what I'll do is, I'll go to New.

22
00:01:34,720 --> 00:01:35,930
Interface.

23
00:01:35,930 --> 00:01:43,630
And I'll call this interface let's call it
StringListener.

24
00:01:43,630 --> 00:01:44,210
How's that?

25
00:01:44,210 --> 00:01:44,570
StringListener.

26
00:01:44,570 --> 00:01:47,400
It's not too important.

27
00:01:48,700 --> 00:01:52,330
And I'm gonna give StringListener one
method header.

28
00:01:52,330 --> 00:01:55,210
I'll make it public void.

29
00:01:56,552 --> 00:02:02,360
and, let's call it I don't know actually.

30
00:02:02,360 --> 00:02:05,930
Let's call it string or text.

31
00:02:05,930 --> 00:02:08,180
Well, I'll tell you what.

32
00:02:08,180 --> 00:02:09,110
Let's look at main frame.

33
00:02:10,170 --> 00:02:12,100
In fact, let's look at the toolbar.

34
00:02:12,100 --> 00:02:18,140
So when you listen to a event on a button,
you have an action list now.

35
00:02:18,140 --> 00:02:24,980
So, the, Action list interact has this
action performed method in it.

36
00:02:26,064 --> 00:02:28,110
And anything that wants to listen to a

37
00:02:28,110 --> 00:02:30,820
button, has to have the action perform
method.

38
00:02:32,010 --> 00:02:38,730
So in this interface, let's give this text
performed.

39
00:02:41,392 --> 00:02:45,440
Or maybe a text emitted method.

40
00:02:45,440 --> 00:02:46,310
I think that'll do.

41
00:02:46,310 --> 00:02:47,200
Okay.

42
00:02:47,200 --> 00:02:50,430
I made that a type string and so

43
00:02:52,600 --> 00:02:56,110
so what's this saying is that anything
that implements.

44
00:02:56,110 --> 00:02:57,800
This string this interface has to have

45
00:02:57,800 --> 00:03:00,990
a method called textEmitted that accepts a
string,

46
00:03:03,030 --> 00:03:07,640
and now, the beauty of this is that

47
00:03:09,620 --> 00:03:15,610
I can in my toolbar I can make it fire an
event.

48
00:03:15,610 --> 00:03:18,510
To a listener that implements this.

49
00:03:18,510 --> 00:03:20,270
If someone clicks a button.

50
00:03:21,680 --> 00:03:22,870
So let's see how that would work.

51
00:03:24,010 --> 00:03:28,260
Basically instead of a text panel here,
I'm gonna give it a private variable of

52
00:03:28,260 --> 00:03:34,275
type StringListener and I'll call that
textListener.

53
00:03:34,275 --> 00:03:41,830
And, I need a method for setting this
string listener.

54
00:03:41,830 --> 00:03:45,900
So, in the moment, I've got a method
called set text panel.

55
00:03:45,900 --> 00:03:48,270
I'm gonna change that, get rid of that.

56
00:03:48,270 --> 00:03:50,476
I'm gonna have a method.

57
00:03:50,476 --> 00:03:54,360
Public void set and I'll call it

58
00:03:56,120 --> 00:04:01,950
setStringListener like this and the
setStringListener method

59
00:04:01,950 --> 00:04:08,560
accepts any object that implements the
StringListener interface.

60
00:04:08,560 --> 00:04:09,360
Let's call up listener.

61
00:04:10,800 --> 00:04:17,120
And what it does with it, is it saves a
reference to this up here.

62
00:04:17,120 --> 00:04:26,240
So let's say this .textlistener, this
.textlistener equals listener.

63
00:04:29,550 --> 00:04:36,016
So, what I want, what I'm doing now is and
let's just get

64
00:04:36,016 --> 00:04:41,599
rid of this comment out the references to
text pannel for the moment.

65
00:04:43,560 --> 00:04:48,190
So in my toolbar I've given it a variable
of type stringListener.

66
00:04:48,190 --> 00:04:53,050
The stringList interface just says that an
object should have one method called

67
00:04:53,050 --> 00:04:59,420
textOmitted which accepts a string and
I've supplied the toolbar with a method.

68
00:04:59,420 --> 00:05:02,050
To set this textlitner here.

69
00:05:04,190 --> 00:05:11,810
Now in my main frame, the beauty of this
is I can say toolbar.settext.

70
00:05:11,810 --> 00:05:16,860
Listener sets string listener, sorry, sets
string listener.

71
00:05:16,860 --> 00:05:19,556
And then I can use an anonymous clip.

72
00:05:19,556 --> 00:05:23,970
Class, just as I do with the buttons here.

73
00:05:23,970 --> 00:05:28,990
So with the button you can do, actually
this isn't an anonymous class, but in

74
00:05:28,990 --> 00:05:34,010
an earlier tutorial I showed you how to
use an anonymous class for the button.

75
00:05:34,010 --> 00:05:34,840
And the action listener.

76
00:05:34,840 --> 00:05:36,140
We're going to do the same thing here.

77
00:05:36,140 --> 00:05:37,820
So I'll say, set string is snap.

78
00:05:37,820 --> 00:05:47,400
A new string listener as the old string
listener was class and open a bracket and

79
00:05:49,520 --> 00:05:52,130
so Eclipse put in a closing bracket here
and I just need to.

80
00:05:52,130 --> 00:05:59,420
To add the missing methods, I don't add
unimplemented methods, and at

81
00:05:59,420 --> 00:06:05,820
the moment I just output this text here so
let's get rid of some of this extra space.

82
00:06:08,620 --> 00:06:11,930
So my stringListener class just has this
text emitted

83
00:06:11,930 --> 00:06:13,440
method and at the moment it's just gonna
print.

84
00:06:13,440 --> 00:06:14,740
Print out the text here.

85
00:06:14,740 --> 00:06:16,330
And now.

86
00:06:16,330 --> 00:06:19,290
in the tool bar, when a button is

87
00:06:19,290 --> 00:06:23,900
clicked, if the hello button's clicked,
I'm gonna say

88
00:06:26,300 --> 00:06:30,030
if, if the text listener.

89
00:06:31,190 --> 00:06:31,970
Has been set.

90
00:06:31,970 --> 00:06:35,987
So if it's not, not equal to null.

91
00:06:35,987 --> 00:06:37,167
Not equal to null.

92
00:06:37,167 --> 00:06:41,260
[BLANK_AUDIO]

93
00:06:41,260 --> 00:06:49,921
Then, I can say text listener.

94
00:06:49,921 --> 00:06:59,520
And call the um,text omitted method of
text listener and pass in hello.

95
00:06:59,520 --> 00:07:01,800
Because the hello button's been clicked at
this point.

96
00:07:03,560 --> 00:07:08,540
I can do the same, if the goodbye button's
been clicked.

97
00:07:10,860 --> 00:07:12,860
And here we go.

98
00:07:12,860 --> 00:07:13,360
Goodbye.

99
00:07:16,290 --> 00:07:20,507
And now finally, the final step here, is
the, in the main frame.

100
00:07:20,507 --> 00:07:23,590
If this text emitter thing happens first.

101
00:07:23,590 --> 00:07:25,990
We'll let's first run it and see if it
works.

102
00:07:25,990 --> 00:07:30,240
So let's minimize the editor here, go to
my swinger,

103
00:07:31,720 --> 00:07:36,540
and click hello and goodbye, and you can
see that that's working.

104
00:07:38,710 --> 00:07:39,800
There's a little more space than I.

105
00:07:39,800 --> 00:07:40,350
I expected.

106
00:07:40,350 --> 00:07:45,110
That's because I've got a print and our
language also adds on a new line, but now

107
00:07:45,110 --> 00:07:51,291
all I've got to do is get the textPanel
and call textPanel.appendtext text.

108
00:07:54,300 --> 00:07:57,750
So if I run that and I've got the same
results as before.

109
00:07:59,390 --> 00:08:02,100
Now don't worry if this seems pretty
complex because it

110
00:08:02,100 --> 00:08:04,220
is a little bit complicated, but when you
get your head

111
00:08:04,220 --> 00:08:11,147
around this you've understood Basically
the most important facts about getting

112
00:08:11,147 --> 00:08:16,420
the communication work working, getting
your components wired together, in swing.

113
00:08:16,420 --> 00:08:20,750
And the whole trick to it is is that you
have one component

114
00:08:20,750 --> 00:08:24,040
where you set some kind of listener or add
some kind of listener.

115
00:08:25,060 --> 00:08:30,120
And a controller and some kind of central
communication.

116
00:08:30,120 --> 00:08:35,800
Switch board listens listens to that those
messages and

117
00:08:35,800 --> 00:08:38,240
tells for the components what to do when
the

118
00:08:38,240 --> 00:08:43,070
messages occur and so, I got this method
here

119
00:08:43,070 --> 00:08:47,570
this all is interface enables me basically
to separate.

120
00:08:47,570 --> 00:08:51,320
The toolbar and the text area.

121
00:08:51,320 --> 00:08:54,090
And, so the toolbar now doesn't know
anything about the text area.

122
00:08:54,090 --> 00:08:57,910
There's no reference to text areas in this
button.

123
00:08:57,910 --> 00:09:03,340
All there is, is a reference to a string
listener which could

124
00:09:03,340 --> 00:09:07,330
be any kind of class, because all the
toolbar cares about is that.

125
00:09:07,330 --> 00:09:09,700
So the string listener should have some
methical text

126
00:09:09,700 --> 00:09:12,570
emitted so that the tool bar can call that

127
00:09:12,570 --> 00:09:16,070
method when a button is clicked, and
that's all

128
00:09:16,070 --> 00:09:19,000
the tool bar has to know about or care
about.

129
00:09:19,000 --> 00:09:24,880
And in the main frame, the main frame
intercepts these method calls.

130
00:09:24,880 --> 00:09:29,060
So the tool bar is basically when a
button's clicked, it's calling

131
00:09:29,060 --> 00:09:32,900
the text emitted method which is actually
the method of this synonymous

132
00:09:32,900 --> 00:09:37,990
class here, so it's calling this and that,
and then, in here,

133
00:09:39,370 --> 00:09:44,200
in the controller, the main frame, with an
append.text to the text panel.

134
00:09:44,200 --> 00:09:48,020
By calling a method that we added to text
panel.

135
00:09:49,910 --> 00:09:51,650
And that is, that is pretty tricky.

136
00:09:51,650 --> 00:09:54,470
But if you just kind of have a look at the
code

137
00:09:54,470 --> 00:09:59,900
and type this out yourself, you will get
the hang of it.

138
00:09:59,900 --> 00:10:01,810
And if, if it seems.

139
00:10:01,810 --> 00:10:03,020
Particularly complex.

140
00:10:04,530 --> 00:10:07,590
It's almost not worth worrying about it
too much.

141
00:10:07,590 --> 00:10:11,272
If you just type it out then maybe, I

142
00:10:11,272 --> 00:10:14,060
don't know, type it out again like a day
later.

143
00:10:14,060 --> 00:10:18,560
You know, with variations, of course, to
make it interesting.

144
00:10:18,560 --> 00:10:19,300
Then.

145
00:10:19,300 --> 00:10:23,340
It will start to sink into your synapses,
and you will understand how it works.

146
00:10:23,340 --> 00:10:26,920
And when you've understood this, you've
basically got the swing.

147
00:10:26,920 --> 00:10:31,790
And, using this technique, you can build
up very complex swing gaps.

148
00:10:31,790 --> 00:10:35,360
And you can keep the communications simple
between components

149
00:10:35,360 --> 00:10:38,280
and they won't turn into, hopefully, a
rat's nest.

150
00:10:38,280 --> 00:10:42,820
I'm just gonna mention very quickly here
that if you, this is

151
00:10:42,820 --> 00:10:45,530
called set stringlistener, but you often

152
00:10:45,530 --> 00:10:48,840
see methods called add actionlistener for
example.

153
00:10:48,840 --> 00:10:51,970
And that's because you can add multiple
listeners to swing.

154
00:10:51,970 --> 00:10:53,430
Components.

155
00:10:53,430 --> 00:10:55,500
And what I do with it is, instead of
having

156
00:10:55,500 --> 00:10:59,720
the single reference they have like an
array list of references.

157
00:10:59,720 --> 00:11:03,420
And in fact, and they just iterate through
our

158
00:11:03,420 --> 00:11:07,450
array list and notify any listener that's
been added anywhere.

159
00:11:08,500 --> 00:11:11,750
And we might look at that in a future
tutorial if it comes up.

160
00:11:11,750 --> 00:11:12,930
But this.

161
00:11:12,930 --> 00:11:17,280
Simple technique, relatively simple, will
get you through most cases.

162
00:11:19,020 --> 00:11:23,640
Okay, so join me again for the next
tutorial,

163
00:11:24,830 --> 00:11:27,040
when I'm not quite sure what we're gonna
do.

164
00:11:27,040 --> 00:11:31,310
But we're gonna further work on this swing
application.

165
00:11:31,310 --> 00:11:34,020
And make it a bit more interesting.

166
00:11:34,020 --> 00:11:36,120
So until then, happy coding.

